
Focusmotorcontroller.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000790  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000071c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000010  00800100  00800100  00000790  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000790  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000007c0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000058  00000000  00000000  00000800  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000008c5  00000000  00000000  00000858  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000717  00000000  00000000  0000111d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000003f2  00000000  00000000  00001834  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000a4  00000000  00000000  00001c28  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000448  00000000  00000000  00001ccc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000174  00000000  00000000  00002114  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000060  00000000  00000000  00002288  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__vector_11>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a0 31       	cpi	r26, 0x10	; 16
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 af 00 	call	0x15e	; 0x15e <main>
  88:	0c 94 8c 03 	jmp	0x718	; 0x718 <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <init>:
double speedToPeriod(double speed) {
	double RPS = speed / TRAVEL_PR; // revolutions per second
	double motorRPS = (RPS * PULLEY_TEETH) / MOTOR_TEETH;
	double stepFrequency = motorRPS * STEPS_PR;
	return 1/stepFrequency;
}
  90:	80 e5       	ldi	r24, 0x50	; 80
  92:	90 e0       	ldi	r25, 0x00	; 0
  94:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
  98:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
  9c:	ef e6       	ldi	r30, 0x6F	; 111
  9e:	f0 e0       	ldi	r31, 0x00	; 0
  a0:	80 81       	ld	r24, Z
  a2:	82 60       	ori	r24, 0x02	; 2
  a4:	80 83       	st	Z, r24
  a6:	e1 e8       	ldi	r30, 0x81	; 129
  a8:	f0 e0       	ldi	r31, 0x00	; 0
  aa:	80 81       	ld	r24, Z
  ac:	89 60       	ori	r24, 0x09	; 9
  ae:	80 83       	st	Z, r24
  b0:	78 94       	sei
  b2:	25 9a       	sbi	0x04, 5	; 4
  b4:	55 9a       	sbi	0x0a, 5	; 10
  b6:	56 9a       	sbi	0x0a, 6	; 10
  b8:	57 9a       	sbi	0x0a, 7	; 10
  ba:	20 98       	cbi	0x04, 0	; 4
  bc:	21 98       	cbi	0x04, 1	; 4
  be:	ec e7       	ldi	r30, 0x7C	; 124
  c0:	f0 e0       	ldi	r31, 0x00	; 0
  c2:	80 81       	ld	r24, Z
  c4:	80 64       	ori	r24, 0x40	; 64
  c6:	80 83       	st	Z, r24
  c8:	ea e7       	ldi	r30, 0x7A	; 122
  ca:	f0 e0       	ldi	r31, 0x00	; 0
  cc:	80 81       	ld	r24, Z
  ce:	87 68       	ori	r24, 0x87	; 135
  d0:	80 83       	st	Z, r24
  d2:	08 95       	ret

000000d4 <__vector_11>:
  d4:	1f 92       	push	r1
  d6:	0f 92       	push	r0
  d8:	0f b6       	in	r0, 0x3f	; 63
  da:	0f 92       	push	r0
  dc:	11 24       	eor	r1, r1
  de:	8f 93       	push	r24
  e0:	81 e0       	ldi	r24, 0x01	; 1
  e2:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <flagIsr>
  e6:	8f 91       	pop	r24
  e8:	0f 90       	pop	r0
  ea:	0f be       	out	0x3f, r0	; 63
  ec:	0f 90       	pop	r0
  ee:	1f 90       	pop	r1
  f0:	18 95       	reti

000000f2 <getADCValue>:

uint16_t getADCValue() {
	ADMUX &= ~((1 << MUX0) | (1 << MUX1) |(1 << MUX2) | (1 << MUX3)); // RESET REGISTER
  f2:	ec e7       	ldi	r30, 0x7C	; 124
  f4:	f0 e0       	ldi	r31, 0x00	; 0
  f6:	80 81       	ld	r24, Z
  f8:	80 7f       	andi	r24, 0xF0	; 240
  fa:	80 83       	st	Z, r24
	ADCSRA |= (1 << ADSC);
  fc:	ea e7       	ldi	r30, 0x7A	; 122
  fe:	f0 e0       	ldi	r31, 0x00	; 0
 100:	80 81       	ld	r24, Z
 102:	80 64       	ori	r24, 0x40	; 64
 104:	80 83       	st	Z, r24
	
	while(ADCSRA & (1 << ADSC));
 106:	80 81       	ld	r24, Z
 108:	86 fd       	sbrc	r24, 6
 10a:	fd cf       	rjmp	.-6      	; 0x106 <getADCValue+0x14>
	
	uint8_t low = ADCL;
 10c:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
	uint8_t high = ADCH;
 110:	20 91 79 00 	lds	r18, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
	return (high << 8) | low;
 114:	90 e0       	ldi	r25, 0x00	; 0
}
 116:	92 2b       	or	r25, r18
 118:	08 95       	ret

0000011a <enableDriver>:

void enableDriver() {
	EN_PORT &= ~EN_PIN;
 11a:	5f 98       	cbi	0x0b, 7	; 11
 11c:	08 95       	ret

0000011e <disableDriver>:
}
void disableDriver() {
	EN_PORT |= EN_PIN;
 11e:	5f 9a       	sbi	0x0b, 7	; 11
 120:	08 95       	ret

00000122 <adcToSpeed>:
}

double adcToSpeed(uint16_t adcVal) {
	if (adcVal > ADC_MAX) adcVal = ADC_MAX;
	
	return MIN_SPEED + MAX_SPEED * (double) adcVal / ADC_MAX;
 122:	81 15       	cp	r24, r1
 124:	24 e0       	ldi	r18, 0x04	; 4
 126:	92 07       	cpc	r25, r18
 128:	10 f0       	brcs	.+4      	; 0x12e <adcToSpeed+0xc>
 12a:	8f ef       	ldi	r24, 0xFF	; 255
 12c:	93 e0       	ldi	r25, 0x03	; 3
 12e:	bc 01       	movw	r22, r24
 130:	80 e0       	ldi	r24, 0x00	; 0
 132:	90 e0       	ldi	r25, 0x00	; 0
 134:	0e 94 91 02 	call	0x522	; 0x522 <__floatunsisf>
 138:	20 e0       	ldi	r18, 0x00	; 0
 13a:	30 e0       	ldi	r19, 0x00	; 0
 13c:	40 e7       	ldi	r20, 0x70	; 112
 13e:	51 e4       	ldi	r21, 0x41	; 65
 140:	0e 94 1f 03 	call	0x63e	; 0x63e <__mulsf3>
 144:	20 e0       	ldi	r18, 0x00	; 0
 146:	30 ec       	ldi	r19, 0xC0	; 192
 148:	4f e7       	ldi	r20, 0x7F	; 127
 14a:	54 e4       	ldi	r21, 0x44	; 68
 14c:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <__divsf3>
 150:	2d ec       	ldi	r18, 0xCD	; 205
 152:	3c ec       	ldi	r19, 0xCC	; 204
 154:	4c e4       	ldi	r20, 0x4C	; 76
 156:	5d e3       	ldi	r21, 0x3D	; 61
 158:	0e 94 84 01 	call	0x308	; 0x308 <__addsf3>
} 
 15c:	08 95       	ret

0000015e <main>:
	ADCSRA |= (1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0)|(1<<ADEN);
}

int main(void)
{
	init();
 15e:	0e 94 48 00 	call	0x90	; 0x90 <init>
    disableDriver();
 162:	0e 94 8f 00 	call	0x11e	; 0x11e <disableDriver>
			flag10ms = 0;
			double period = speedToPeriod(adcToSpeed(getADCValue()));
			periodZ = (uint32_t) (period / TIMER_TICK);
			state = 0;
			if (SW_F_PORT & SW_F_PIN) {
				state = 1;
 166:	ff 24       	eor	r15, r15
 168:	f3 94       	inc	r15
				offCounter = 0;
			} else {
				offCounter++;
				if (offCounter >= OFF_DELAY) {
					disableDriver();
					offCounter = OFF_DELAY;
 16a:	c8 eb       	ldi	r28, 0xB8	; 184
 16c:	db e0       	ldi	r29, 0x0B	; 11
			if (SW_F_PORT & SW_F_PIN) {
				state = 1;
				DIR_PORT |= DIR_PIN;
				STATUS_LED_PORT |= STATUS_LED_PIN;
			} else if (SW_R_PORT & SW_R_PIN) {
				state = -1;
 16e:	0f ef       	ldi	r16, 0xFF	; 255
			flag10ms = 0;
			double period = speedToPeriod(adcToSpeed(getADCValue()));
			periodZ = (uint32_t) (period / TIMER_TICK);
			state = 0;
			if (SW_F_PORT & SW_F_PIN) {
				state = 1;
 170:	1f 2d       	mov	r17, r15
int main(void)
{
	init();
    disableDriver();
	while (1) {
		if (flag10ms) {
 172:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <flag10ms>
 176:	88 23       	and	r24, r24
 178:	09 f4       	brne	.+2      	; 0x17c <main+0x1e>
 17a:	7d c0       	rjmp	.+250    	; 0x276 <main+0x118>
			flag10ms = 0;
 17c:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <flag10ms>
			double period = speedToPeriod(adcToSpeed(getADCValue()));
 180:	0e 94 79 00 	call	0xf2	; 0xf2 <getADCValue>
 184:	0e 94 91 00 	call	0x122	; 0x122 <adcToSpeed>
			periodZ = (uint32_t) (period / TIMER_TICK);
 188:	20 e0       	ldi	r18, 0x00	; 0
 18a:	30 e0       	ldi	r19, 0x00	; 0
 18c:	40 e2       	ldi	r20, 0x20	; 32
 18e:	51 e4       	ldi	r21, 0x41	; 65
 190:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <__divsf3>
 194:	20 e0       	ldi	r18, 0x00	; 0
 196:	30 e0       	ldi	r19, 0x00	; 0
 198:	40 ea       	ldi	r20, 0xA0	; 160
 19a:	52 e4       	ldi	r21, 0x42	; 66
 19c:	0e 94 1f 03 	call	0x63e	; 0x63e <__mulsf3>
 1a0:	20 e0       	ldi	r18, 0x00	; 0
 1a2:	30 e0       	ldi	r19, 0x00	; 0
 1a4:	40 ea       	ldi	r20, 0xA0	; 160
 1a6:	51 e4       	ldi	r21, 0x41	; 65
 1a8:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <__divsf3>
 1ac:	20 e0       	ldi	r18, 0x00	; 0
 1ae:	30 e0       	ldi	r19, 0x00	; 0
 1b0:	48 e4       	ldi	r20, 0x48	; 72
 1b2:	55 e4       	ldi	r21, 0x45	; 69
 1b4:	0e 94 1f 03 	call	0x63e	; 0x63e <__mulsf3>
 1b8:	9b 01       	movw	r18, r22
 1ba:	ac 01       	movw	r20, r24
 1bc:	60 e0       	ldi	r22, 0x00	; 0
 1be:	70 e0       	ldi	r23, 0x00	; 0
 1c0:	80 e8       	ldi	r24, 0x80	; 128
 1c2:	9f e3       	ldi	r25, 0x3F	; 63
 1c4:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <__divsf3>
 1c8:	2c ea       	ldi	r18, 0xAC	; 172
 1ca:	35 ec       	ldi	r19, 0xC5	; 197
 1cc:	47 ea       	ldi	r20, 0xA7	; 167
 1ce:	56 e3       	ldi	r21, 0x36	; 54
 1d0:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <__divsf3>
 1d4:	0e 94 62 02 	call	0x4c4	; 0x4c4 <__fixunssfsi>
 1d8:	60 93 05 01 	sts	0x0105, r22	; 0x800105 <periodZ>
 1dc:	70 93 06 01 	sts	0x0106, r23	; 0x800106 <periodZ+0x1>
 1e0:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <periodZ+0x2>
 1e4:	90 93 08 01 	sts	0x0108, r25	; 0x800108 <periodZ+0x3>
			state = 0;
 1e8:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <state>
			if (SW_F_PORT & SW_F_PIN) {
 1ec:	18 9b       	sbis	0x03, 0	; 3
 1ee:	05 c0       	rjmp	.+10     	; 0x1fa <main+0x9c>
				state = 1;
 1f0:	10 93 03 01 	sts	0x0103, r17	; 0x800103 <state>
				DIR_PORT |= DIR_PIN;
 1f4:	5e 9a       	sbi	0x0b, 6	; 11
				STATUS_LED_PORT |= STATUS_LED_PIN;
 1f6:	2d 9a       	sbi	0x05, 5	; 5
 1f8:	06 c0       	rjmp	.+12     	; 0x206 <main+0xa8>
			} else if (SW_R_PORT & SW_R_PIN) {
 1fa:	19 9b       	sbis	0x03, 1	; 3
 1fc:	25 c0       	rjmp	.+74     	; 0x248 <main+0xea>
				state = -1;
 1fe:	00 93 03 01 	sts	0x0103, r16	; 0x800103 <state>
				DIR_PORT &= ~DIR_PIN;
 202:	5e 98       	cbi	0x0b, 6	; 11
				STATUS_LED_PORT |= STATUS_LED_PIN;
 204:	2d 9a       	sbi	0x05, 5	; 5
			} 
			
			
			if (state) {
 206:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <state>
 20a:	88 23       	and	r24, r24
 20c:	e9 f0       	breq	.+58     	; 0x248 <main+0xea>
				enableDriver();
 20e:	0e 94 8d 00 	call	0x11a	; 0x11a <enableDriver>
				if (state != prevState) stepCounter = periodZ;
 212:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <state>
 216:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <prevState>
 21a:	98 17       	cp	r25, r24
 21c:	81 f0       	breq	.+32     	; 0x23e <main+0xe0>
 21e:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <periodZ>
 222:	90 91 06 01 	lds	r25, 0x0106	; 0x800106 <periodZ+0x1>
 226:	a0 91 07 01 	lds	r26, 0x0107	; 0x800107 <periodZ+0x2>
 22a:	b0 91 08 01 	lds	r27, 0x0108	; 0x800108 <periodZ+0x3>
 22e:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <stepCounter>
 232:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <stepCounter+0x1>
 236:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <stepCounter+0x2>
 23a:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <stepCounter+0x3>
				offCounter = 0;
 23e:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <_edata+0x1>
 242:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <_edata>
 246:	13 c0       	rjmp	.+38     	; 0x26e <main+0x110>
			} else {
				offCounter++;
 248:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 24c:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_edata+0x1>
 250:	01 96       	adiw	r24, 0x01	; 1
 252:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <_edata+0x1>
 256:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
				if (offCounter >= OFF_DELAY) {
 25a:	88 3b       	cpi	r24, 0xB8	; 184
 25c:	9b 40       	sbci	r25, 0x0B	; 11
 25e:	30 f0       	brcs	.+12     	; 0x26c <main+0x10e>
					disableDriver();
 260:	0e 94 8f 00 	call	0x11e	; 0x11e <disableDriver>
					offCounter = OFF_DELAY;
 264:	d0 93 01 01 	sts	0x0101, r29	; 0x800101 <_edata+0x1>
 268:	c0 93 00 01 	sts	0x0100, r28	; 0x800100 <_edata>
				}
				STATUS_LED_PORT &= ~STATUS_LED_PIN;
 26c:	2d 98       	cbi	0x05, 5	; 5
			}
			prevState = state;
 26e:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <state>
 272:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <prevState>
		}
		
		if (flagIsr) {
 276:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <flagIsr>
 27a:	88 23       	and	r24, r24
 27c:	09 f4       	brne	.+2      	; 0x280 <main+0x122>
 27e:	79 cf       	rjmp	.-270    	; 0x172 <main+0x14>
			flagIsr = 0;	
 280:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <flagIsr>
			stepCounter--;
 284:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <stepCounter>
 288:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <stepCounter+0x1>
 28c:	a0 91 0c 01 	lds	r26, 0x010C	; 0x80010c <stepCounter+0x2>
 290:	b0 91 0d 01 	lds	r27, 0x010D	; 0x80010d <stepCounter+0x3>
 294:	01 97       	sbiw	r24, 0x01	; 1
 296:	a1 09       	sbc	r26, r1
 298:	b1 09       	sbc	r27, r1
 29a:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <stepCounter>
 29e:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <stepCounter+0x1>
 2a2:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <stepCounter+0x2>
 2a6:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <stepCounter+0x3>
			if (stepCounter == 0) {
 2aa:	89 2b       	or	r24, r25
 2ac:	8a 2b       	or	r24, r26
 2ae:	8b 2b       	or	r24, r27
 2b0:	a9 f4       	brne	.+42     	; 0x2dc <main+0x17e>
				if (state!= 0) STEP_PORT |= STEP_PIN;
 2b2:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <state>
 2b6:	81 11       	cpse	r24, r1
 2b8:	5d 9a       	sbi	0x0b, 5	; 11
				stepCounter = periodZ;
 2ba:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <periodZ>
 2be:	90 91 06 01 	lds	r25, 0x0106	; 0x800106 <periodZ+0x1>
 2c2:	a0 91 07 01 	lds	r26, 0x0107	; 0x800107 <periodZ+0x2>
 2c6:	b0 91 08 01 	lds	r27, 0x0108	; 0x800108 <periodZ+0x3>
 2ca:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <stepCounter>
 2ce:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <stepCounter+0x1>
 2d2:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <stepCounter+0x2>
 2d6:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <stepCounter+0x3>
 2da:	01 c0       	rjmp	.+2      	; 0x2de <main+0x180>
			} else {
				STEP_PORT &= ~STEP_PIN;
 2dc:	5d 98       	cbi	0x0b, 5	; 11
			}
			
			timerCounter++;
 2de:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <timerCounter>
 2e2:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <timerCounter+0x1>
 2e6:	01 96       	adiw	r24, 0x01	; 1
 2e8:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <timerCounter+0x1>
 2ec:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <timerCounter>
			if (timerCounter == 2000) {
 2f0:	80 3d       	cpi	r24, 0xD0	; 208
 2f2:	97 40       	sbci	r25, 0x07	; 7
 2f4:	09 f0       	breq	.+2      	; 0x2f8 <main+0x19a>
 2f6:	3d cf       	rjmp	.-390    	; 0x172 <main+0x14>
				flag10ms = 1;
 2f8:	f0 92 09 01 	sts	0x0109, r15	; 0x800109 <flag10ms>
				timerCounter= 0;
 2fc:	10 92 0f 01 	sts	0x010F, r1	; 0x80010f <timerCounter+0x1>
 300:	10 92 0e 01 	sts	0x010E, r1	; 0x80010e <timerCounter>
 304:	36 cf       	rjmp	.-404    	; 0x172 <main+0x14>

00000306 <__subsf3>:
 306:	50 58       	subi	r21, 0x80	; 128

00000308 <__addsf3>:
 308:	bb 27       	eor	r27, r27
 30a:	aa 27       	eor	r26, r26
 30c:	0e 94 9b 01 	call	0x336	; 0x336 <__addsf3x>
 310:	0c 94 e5 02 	jmp	0x5ca	; 0x5ca <__fp_round>
 314:	0e 94 d7 02 	call	0x5ae	; 0x5ae <__fp_pscA>
 318:	38 f0       	brcs	.+14     	; 0x328 <__addsf3+0x20>
 31a:	0e 94 de 02 	call	0x5bc	; 0x5bc <__fp_pscB>
 31e:	20 f0       	brcs	.+8      	; 0x328 <__addsf3+0x20>
 320:	39 f4       	brne	.+14     	; 0x330 <__addsf3+0x28>
 322:	9f 3f       	cpi	r25, 0xFF	; 255
 324:	19 f4       	brne	.+6      	; 0x32c <__addsf3+0x24>
 326:	26 f4       	brtc	.+8      	; 0x330 <__addsf3+0x28>
 328:	0c 94 d4 02 	jmp	0x5a8	; 0x5a8 <__fp_nan>
 32c:	0e f4       	brtc	.+2      	; 0x330 <__addsf3+0x28>
 32e:	e0 95       	com	r30
 330:	e7 fb       	bst	r30, 7
 332:	0c 94 ce 02 	jmp	0x59c	; 0x59c <__fp_inf>

00000336 <__addsf3x>:
 336:	e9 2f       	mov	r30, r25
 338:	0e 94 f6 02 	call	0x5ec	; 0x5ec <__fp_split3>
 33c:	58 f3       	brcs	.-42     	; 0x314 <__addsf3+0xc>
 33e:	ba 17       	cp	r27, r26
 340:	62 07       	cpc	r22, r18
 342:	73 07       	cpc	r23, r19
 344:	84 07       	cpc	r24, r20
 346:	95 07       	cpc	r25, r21
 348:	20 f0       	brcs	.+8      	; 0x352 <__addsf3x+0x1c>
 34a:	79 f4       	brne	.+30     	; 0x36a <__addsf3x+0x34>
 34c:	a6 f5       	brtc	.+104    	; 0x3b6 <__addsf3x+0x80>
 34e:	0c 94 18 03 	jmp	0x630	; 0x630 <__fp_zero>
 352:	0e f4       	brtc	.+2      	; 0x356 <__addsf3x+0x20>
 354:	e0 95       	com	r30
 356:	0b 2e       	mov	r0, r27
 358:	ba 2f       	mov	r27, r26
 35a:	a0 2d       	mov	r26, r0
 35c:	0b 01       	movw	r0, r22
 35e:	b9 01       	movw	r22, r18
 360:	90 01       	movw	r18, r0
 362:	0c 01       	movw	r0, r24
 364:	ca 01       	movw	r24, r20
 366:	a0 01       	movw	r20, r0
 368:	11 24       	eor	r1, r1
 36a:	ff 27       	eor	r31, r31
 36c:	59 1b       	sub	r21, r25
 36e:	99 f0       	breq	.+38     	; 0x396 <__addsf3x+0x60>
 370:	59 3f       	cpi	r21, 0xF9	; 249
 372:	50 f4       	brcc	.+20     	; 0x388 <__addsf3x+0x52>
 374:	50 3e       	cpi	r21, 0xE0	; 224
 376:	68 f1       	brcs	.+90     	; 0x3d2 <__addsf3x+0x9c>
 378:	1a 16       	cp	r1, r26
 37a:	f0 40       	sbci	r31, 0x00	; 0
 37c:	a2 2f       	mov	r26, r18
 37e:	23 2f       	mov	r18, r19
 380:	34 2f       	mov	r19, r20
 382:	44 27       	eor	r20, r20
 384:	58 5f       	subi	r21, 0xF8	; 248
 386:	f3 cf       	rjmp	.-26     	; 0x36e <__addsf3x+0x38>
 388:	46 95       	lsr	r20
 38a:	37 95       	ror	r19
 38c:	27 95       	ror	r18
 38e:	a7 95       	ror	r26
 390:	f0 40       	sbci	r31, 0x00	; 0
 392:	53 95       	inc	r21
 394:	c9 f7       	brne	.-14     	; 0x388 <__addsf3x+0x52>
 396:	7e f4       	brtc	.+30     	; 0x3b6 <__addsf3x+0x80>
 398:	1f 16       	cp	r1, r31
 39a:	ba 0b       	sbc	r27, r26
 39c:	62 0b       	sbc	r22, r18
 39e:	73 0b       	sbc	r23, r19
 3a0:	84 0b       	sbc	r24, r20
 3a2:	ba f0       	brmi	.+46     	; 0x3d2 <__addsf3x+0x9c>
 3a4:	91 50       	subi	r25, 0x01	; 1
 3a6:	a1 f0       	breq	.+40     	; 0x3d0 <__addsf3x+0x9a>
 3a8:	ff 0f       	add	r31, r31
 3aa:	bb 1f       	adc	r27, r27
 3ac:	66 1f       	adc	r22, r22
 3ae:	77 1f       	adc	r23, r23
 3b0:	88 1f       	adc	r24, r24
 3b2:	c2 f7       	brpl	.-16     	; 0x3a4 <__addsf3x+0x6e>
 3b4:	0e c0       	rjmp	.+28     	; 0x3d2 <__addsf3x+0x9c>
 3b6:	ba 0f       	add	r27, r26
 3b8:	62 1f       	adc	r22, r18
 3ba:	73 1f       	adc	r23, r19
 3bc:	84 1f       	adc	r24, r20
 3be:	48 f4       	brcc	.+18     	; 0x3d2 <__addsf3x+0x9c>
 3c0:	87 95       	ror	r24
 3c2:	77 95       	ror	r23
 3c4:	67 95       	ror	r22
 3c6:	b7 95       	ror	r27
 3c8:	f7 95       	ror	r31
 3ca:	9e 3f       	cpi	r25, 0xFE	; 254
 3cc:	08 f0       	brcs	.+2      	; 0x3d0 <__addsf3x+0x9a>
 3ce:	b0 cf       	rjmp	.-160    	; 0x330 <__addsf3+0x28>
 3d0:	93 95       	inc	r25
 3d2:	88 0f       	add	r24, r24
 3d4:	08 f0       	brcs	.+2      	; 0x3d8 <__addsf3x+0xa2>
 3d6:	99 27       	eor	r25, r25
 3d8:	ee 0f       	add	r30, r30
 3da:	97 95       	ror	r25
 3dc:	87 95       	ror	r24
 3de:	08 95       	ret

000003e0 <__divsf3>:
 3e0:	0e 94 04 02 	call	0x408	; 0x408 <__divsf3x>
 3e4:	0c 94 e5 02 	jmp	0x5ca	; 0x5ca <__fp_round>
 3e8:	0e 94 de 02 	call	0x5bc	; 0x5bc <__fp_pscB>
 3ec:	58 f0       	brcs	.+22     	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
 3ee:	0e 94 d7 02 	call	0x5ae	; 0x5ae <__fp_pscA>
 3f2:	40 f0       	brcs	.+16     	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
 3f4:	29 f4       	brne	.+10     	; 0x400 <__LOCK_REGION_LENGTH__>
 3f6:	5f 3f       	cpi	r21, 0xFF	; 255
 3f8:	29 f0       	breq	.+10     	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
 3fa:	0c 94 ce 02 	jmp	0x59c	; 0x59c <__fp_inf>
 3fe:	51 11       	cpse	r21, r1
 400:	0c 94 19 03 	jmp	0x632	; 0x632 <__fp_szero>
 404:	0c 94 d4 02 	jmp	0x5a8	; 0x5a8 <__fp_nan>

00000408 <__divsf3x>:
 408:	0e 94 f6 02 	call	0x5ec	; 0x5ec <__fp_split3>
 40c:	68 f3       	brcs	.-38     	; 0x3e8 <__divsf3+0x8>

0000040e <__divsf3_pse>:
 40e:	99 23       	and	r25, r25
 410:	b1 f3       	breq	.-20     	; 0x3fe <__divsf3+0x1e>
 412:	55 23       	and	r21, r21
 414:	91 f3       	breq	.-28     	; 0x3fa <__divsf3+0x1a>
 416:	95 1b       	sub	r25, r21
 418:	55 0b       	sbc	r21, r21
 41a:	bb 27       	eor	r27, r27
 41c:	aa 27       	eor	r26, r26
 41e:	62 17       	cp	r22, r18
 420:	73 07       	cpc	r23, r19
 422:	84 07       	cpc	r24, r20
 424:	38 f0       	brcs	.+14     	; 0x434 <__divsf3_pse+0x26>
 426:	9f 5f       	subi	r25, 0xFF	; 255
 428:	5f 4f       	sbci	r21, 0xFF	; 255
 42a:	22 0f       	add	r18, r18
 42c:	33 1f       	adc	r19, r19
 42e:	44 1f       	adc	r20, r20
 430:	aa 1f       	adc	r26, r26
 432:	a9 f3       	breq	.-22     	; 0x41e <__divsf3_pse+0x10>
 434:	35 d0       	rcall	.+106    	; 0x4a0 <__divsf3_pse+0x92>
 436:	0e 2e       	mov	r0, r30
 438:	3a f0       	brmi	.+14     	; 0x448 <__divsf3_pse+0x3a>
 43a:	e0 e8       	ldi	r30, 0x80	; 128
 43c:	32 d0       	rcall	.+100    	; 0x4a2 <__divsf3_pse+0x94>
 43e:	91 50       	subi	r25, 0x01	; 1
 440:	50 40       	sbci	r21, 0x00	; 0
 442:	e6 95       	lsr	r30
 444:	00 1c       	adc	r0, r0
 446:	ca f7       	brpl	.-14     	; 0x43a <__divsf3_pse+0x2c>
 448:	2b d0       	rcall	.+86     	; 0x4a0 <__divsf3_pse+0x92>
 44a:	fe 2f       	mov	r31, r30
 44c:	29 d0       	rcall	.+82     	; 0x4a0 <__divsf3_pse+0x92>
 44e:	66 0f       	add	r22, r22
 450:	77 1f       	adc	r23, r23
 452:	88 1f       	adc	r24, r24
 454:	bb 1f       	adc	r27, r27
 456:	26 17       	cp	r18, r22
 458:	37 07       	cpc	r19, r23
 45a:	48 07       	cpc	r20, r24
 45c:	ab 07       	cpc	r26, r27
 45e:	b0 e8       	ldi	r27, 0x80	; 128
 460:	09 f0       	breq	.+2      	; 0x464 <__divsf3_pse+0x56>
 462:	bb 0b       	sbc	r27, r27
 464:	80 2d       	mov	r24, r0
 466:	bf 01       	movw	r22, r30
 468:	ff 27       	eor	r31, r31
 46a:	93 58       	subi	r25, 0x83	; 131
 46c:	5f 4f       	sbci	r21, 0xFF	; 255
 46e:	3a f0       	brmi	.+14     	; 0x47e <__divsf3_pse+0x70>
 470:	9e 3f       	cpi	r25, 0xFE	; 254
 472:	51 05       	cpc	r21, r1
 474:	78 f0       	brcs	.+30     	; 0x494 <__divsf3_pse+0x86>
 476:	0c 94 ce 02 	jmp	0x59c	; 0x59c <__fp_inf>
 47a:	0c 94 19 03 	jmp	0x632	; 0x632 <__fp_szero>
 47e:	5f 3f       	cpi	r21, 0xFF	; 255
 480:	e4 f3       	brlt	.-8      	; 0x47a <__divsf3_pse+0x6c>
 482:	98 3e       	cpi	r25, 0xE8	; 232
 484:	d4 f3       	brlt	.-12     	; 0x47a <__divsf3_pse+0x6c>
 486:	86 95       	lsr	r24
 488:	77 95       	ror	r23
 48a:	67 95       	ror	r22
 48c:	b7 95       	ror	r27
 48e:	f7 95       	ror	r31
 490:	9f 5f       	subi	r25, 0xFF	; 255
 492:	c9 f7       	brne	.-14     	; 0x486 <__divsf3_pse+0x78>
 494:	88 0f       	add	r24, r24
 496:	91 1d       	adc	r25, r1
 498:	96 95       	lsr	r25
 49a:	87 95       	ror	r24
 49c:	97 f9       	bld	r25, 7
 49e:	08 95       	ret
 4a0:	e1 e0       	ldi	r30, 0x01	; 1
 4a2:	66 0f       	add	r22, r22
 4a4:	77 1f       	adc	r23, r23
 4a6:	88 1f       	adc	r24, r24
 4a8:	bb 1f       	adc	r27, r27
 4aa:	62 17       	cp	r22, r18
 4ac:	73 07       	cpc	r23, r19
 4ae:	84 07       	cpc	r24, r20
 4b0:	ba 07       	cpc	r27, r26
 4b2:	20 f0       	brcs	.+8      	; 0x4bc <__divsf3_pse+0xae>
 4b4:	62 1b       	sub	r22, r18
 4b6:	73 0b       	sbc	r23, r19
 4b8:	84 0b       	sbc	r24, r20
 4ba:	ba 0b       	sbc	r27, r26
 4bc:	ee 1f       	adc	r30, r30
 4be:	88 f7       	brcc	.-30     	; 0x4a2 <__divsf3_pse+0x94>
 4c0:	e0 95       	com	r30
 4c2:	08 95       	ret

000004c4 <__fixunssfsi>:
 4c4:	0e 94 fe 02 	call	0x5fc	; 0x5fc <__fp_splitA>
 4c8:	88 f0       	brcs	.+34     	; 0x4ec <__fixunssfsi+0x28>
 4ca:	9f 57       	subi	r25, 0x7F	; 127
 4cc:	98 f0       	brcs	.+38     	; 0x4f4 <__fixunssfsi+0x30>
 4ce:	b9 2f       	mov	r27, r25
 4d0:	99 27       	eor	r25, r25
 4d2:	b7 51       	subi	r27, 0x17	; 23
 4d4:	b0 f0       	brcs	.+44     	; 0x502 <__fixunssfsi+0x3e>
 4d6:	e1 f0       	breq	.+56     	; 0x510 <__fixunssfsi+0x4c>
 4d8:	66 0f       	add	r22, r22
 4da:	77 1f       	adc	r23, r23
 4dc:	88 1f       	adc	r24, r24
 4de:	99 1f       	adc	r25, r25
 4e0:	1a f0       	brmi	.+6      	; 0x4e8 <__fixunssfsi+0x24>
 4e2:	ba 95       	dec	r27
 4e4:	c9 f7       	brne	.-14     	; 0x4d8 <__fixunssfsi+0x14>
 4e6:	14 c0       	rjmp	.+40     	; 0x510 <__fixunssfsi+0x4c>
 4e8:	b1 30       	cpi	r27, 0x01	; 1
 4ea:	91 f0       	breq	.+36     	; 0x510 <__fixunssfsi+0x4c>
 4ec:	0e 94 18 03 	call	0x630	; 0x630 <__fp_zero>
 4f0:	b1 e0       	ldi	r27, 0x01	; 1
 4f2:	08 95       	ret
 4f4:	0c 94 18 03 	jmp	0x630	; 0x630 <__fp_zero>
 4f8:	67 2f       	mov	r22, r23
 4fa:	78 2f       	mov	r23, r24
 4fc:	88 27       	eor	r24, r24
 4fe:	b8 5f       	subi	r27, 0xF8	; 248
 500:	39 f0       	breq	.+14     	; 0x510 <__fixunssfsi+0x4c>
 502:	b9 3f       	cpi	r27, 0xF9	; 249
 504:	cc f3       	brlt	.-14     	; 0x4f8 <__fixunssfsi+0x34>
 506:	86 95       	lsr	r24
 508:	77 95       	ror	r23
 50a:	67 95       	ror	r22
 50c:	b3 95       	inc	r27
 50e:	d9 f7       	brne	.-10     	; 0x506 <__fixunssfsi+0x42>
 510:	3e f4       	brtc	.+14     	; 0x520 <__fixunssfsi+0x5c>
 512:	90 95       	com	r25
 514:	80 95       	com	r24
 516:	70 95       	com	r23
 518:	61 95       	neg	r22
 51a:	7f 4f       	sbci	r23, 0xFF	; 255
 51c:	8f 4f       	sbci	r24, 0xFF	; 255
 51e:	9f 4f       	sbci	r25, 0xFF	; 255
 520:	08 95       	ret

00000522 <__floatunsisf>:
 522:	e8 94       	clt
 524:	09 c0       	rjmp	.+18     	; 0x538 <__floatsisf+0x12>

00000526 <__floatsisf>:
 526:	97 fb       	bst	r25, 7
 528:	3e f4       	brtc	.+14     	; 0x538 <__floatsisf+0x12>
 52a:	90 95       	com	r25
 52c:	80 95       	com	r24
 52e:	70 95       	com	r23
 530:	61 95       	neg	r22
 532:	7f 4f       	sbci	r23, 0xFF	; 255
 534:	8f 4f       	sbci	r24, 0xFF	; 255
 536:	9f 4f       	sbci	r25, 0xFF	; 255
 538:	99 23       	and	r25, r25
 53a:	a9 f0       	breq	.+42     	; 0x566 <__floatsisf+0x40>
 53c:	f9 2f       	mov	r31, r25
 53e:	96 e9       	ldi	r25, 0x96	; 150
 540:	bb 27       	eor	r27, r27
 542:	93 95       	inc	r25
 544:	f6 95       	lsr	r31
 546:	87 95       	ror	r24
 548:	77 95       	ror	r23
 54a:	67 95       	ror	r22
 54c:	b7 95       	ror	r27
 54e:	f1 11       	cpse	r31, r1
 550:	f8 cf       	rjmp	.-16     	; 0x542 <__floatsisf+0x1c>
 552:	fa f4       	brpl	.+62     	; 0x592 <__floatsisf+0x6c>
 554:	bb 0f       	add	r27, r27
 556:	11 f4       	brne	.+4      	; 0x55c <__floatsisf+0x36>
 558:	60 ff       	sbrs	r22, 0
 55a:	1b c0       	rjmp	.+54     	; 0x592 <__floatsisf+0x6c>
 55c:	6f 5f       	subi	r22, 0xFF	; 255
 55e:	7f 4f       	sbci	r23, 0xFF	; 255
 560:	8f 4f       	sbci	r24, 0xFF	; 255
 562:	9f 4f       	sbci	r25, 0xFF	; 255
 564:	16 c0       	rjmp	.+44     	; 0x592 <__floatsisf+0x6c>
 566:	88 23       	and	r24, r24
 568:	11 f0       	breq	.+4      	; 0x56e <__floatsisf+0x48>
 56a:	96 e9       	ldi	r25, 0x96	; 150
 56c:	11 c0       	rjmp	.+34     	; 0x590 <__floatsisf+0x6a>
 56e:	77 23       	and	r23, r23
 570:	21 f0       	breq	.+8      	; 0x57a <__floatsisf+0x54>
 572:	9e e8       	ldi	r25, 0x8E	; 142
 574:	87 2f       	mov	r24, r23
 576:	76 2f       	mov	r23, r22
 578:	05 c0       	rjmp	.+10     	; 0x584 <__floatsisf+0x5e>
 57a:	66 23       	and	r22, r22
 57c:	71 f0       	breq	.+28     	; 0x59a <__floatsisf+0x74>
 57e:	96 e8       	ldi	r25, 0x86	; 134
 580:	86 2f       	mov	r24, r22
 582:	70 e0       	ldi	r23, 0x00	; 0
 584:	60 e0       	ldi	r22, 0x00	; 0
 586:	2a f0       	brmi	.+10     	; 0x592 <__floatsisf+0x6c>
 588:	9a 95       	dec	r25
 58a:	66 0f       	add	r22, r22
 58c:	77 1f       	adc	r23, r23
 58e:	88 1f       	adc	r24, r24
 590:	da f7       	brpl	.-10     	; 0x588 <__floatsisf+0x62>
 592:	88 0f       	add	r24, r24
 594:	96 95       	lsr	r25
 596:	87 95       	ror	r24
 598:	97 f9       	bld	r25, 7
 59a:	08 95       	ret

0000059c <__fp_inf>:
 59c:	97 f9       	bld	r25, 7
 59e:	9f 67       	ori	r25, 0x7F	; 127
 5a0:	80 e8       	ldi	r24, 0x80	; 128
 5a2:	70 e0       	ldi	r23, 0x00	; 0
 5a4:	60 e0       	ldi	r22, 0x00	; 0
 5a6:	08 95       	ret

000005a8 <__fp_nan>:
 5a8:	9f ef       	ldi	r25, 0xFF	; 255
 5aa:	80 ec       	ldi	r24, 0xC0	; 192
 5ac:	08 95       	ret

000005ae <__fp_pscA>:
 5ae:	00 24       	eor	r0, r0
 5b0:	0a 94       	dec	r0
 5b2:	16 16       	cp	r1, r22
 5b4:	17 06       	cpc	r1, r23
 5b6:	18 06       	cpc	r1, r24
 5b8:	09 06       	cpc	r0, r25
 5ba:	08 95       	ret

000005bc <__fp_pscB>:
 5bc:	00 24       	eor	r0, r0
 5be:	0a 94       	dec	r0
 5c0:	12 16       	cp	r1, r18
 5c2:	13 06       	cpc	r1, r19
 5c4:	14 06       	cpc	r1, r20
 5c6:	05 06       	cpc	r0, r21
 5c8:	08 95       	ret

000005ca <__fp_round>:
 5ca:	09 2e       	mov	r0, r25
 5cc:	03 94       	inc	r0
 5ce:	00 0c       	add	r0, r0
 5d0:	11 f4       	brne	.+4      	; 0x5d6 <__fp_round+0xc>
 5d2:	88 23       	and	r24, r24
 5d4:	52 f0       	brmi	.+20     	; 0x5ea <__fp_round+0x20>
 5d6:	bb 0f       	add	r27, r27
 5d8:	40 f4       	brcc	.+16     	; 0x5ea <__fp_round+0x20>
 5da:	bf 2b       	or	r27, r31
 5dc:	11 f4       	brne	.+4      	; 0x5e2 <__fp_round+0x18>
 5de:	60 ff       	sbrs	r22, 0
 5e0:	04 c0       	rjmp	.+8      	; 0x5ea <__fp_round+0x20>
 5e2:	6f 5f       	subi	r22, 0xFF	; 255
 5e4:	7f 4f       	sbci	r23, 0xFF	; 255
 5e6:	8f 4f       	sbci	r24, 0xFF	; 255
 5e8:	9f 4f       	sbci	r25, 0xFF	; 255
 5ea:	08 95       	ret

000005ec <__fp_split3>:
 5ec:	57 fd       	sbrc	r21, 7
 5ee:	90 58       	subi	r25, 0x80	; 128
 5f0:	44 0f       	add	r20, r20
 5f2:	55 1f       	adc	r21, r21
 5f4:	59 f0       	breq	.+22     	; 0x60c <__fp_splitA+0x10>
 5f6:	5f 3f       	cpi	r21, 0xFF	; 255
 5f8:	71 f0       	breq	.+28     	; 0x616 <__fp_splitA+0x1a>
 5fa:	47 95       	ror	r20

000005fc <__fp_splitA>:
 5fc:	88 0f       	add	r24, r24
 5fe:	97 fb       	bst	r25, 7
 600:	99 1f       	adc	r25, r25
 602:	61 f0       	breq	.+24     	; 0x61c <__fp_splitA+0x20>
 604:	9f 3f       	cpi	r25, 0xFF	; 255
 606:	79 f0       	breq	.+30     	; 0x626 <__fp_splitA+0x2a>
 608:	87 95       	ror	r24
 60a:	08 95       	ret
 60c:	12 16       	cp	r1, r18
 60e:	13 06       	cpc	r1, r19
 610:	14 06       	cpc	r1, r20
 612:	55 1f       	adc	r21, r21
 614:	f2 cf       	rjmp	.-28     	; 0x5fa <__fp_split3+0xe>
 616:	46 95       	lsr	r20
 618:	f1 df       	rcall	.-30     	; 0x5fc <__fp_splitA>
 61a:	08 c0       	rjmp	.+16     	; 0x62c <__fp_splitA+0x30>
 61c:	16 16       	cp	r1, r22
 61e:	17 06       	cpc	r1, r23
 620:	18 06       	cpc	r1, r24
 622:	99 1f       	adc	r25, r25
 624:	f1 cf       	rjmp	.-30     	; 0x608 <__fp_splitA+0xc>
 626:	86 95       	lsr	r24
 628:	71 05       	cpc	r23, r1
 62a:	61 05       	cpc	r22, r1
 62c:	08 94       	sec
 62e:	08 95       	ret

00000630 <__fp_zero>:
 630:	e8 94       	clt

00000632 <__fp_szero>:
 632:	bb 27       	eor	r27, r27
 634:	66 27       	eor	r22, r22
 636:	77 27       	eor	r23, r23
 638:	cb 01       	movw	r24, r22
 63a:	97 f9       	bld	r25, 7
 63c:	08 95       	ret

0000063e <__mulsf3>:
 63e:	0e 94 32 03 	call	0x664	; 0x664 <__mulsf3x>
 642:	0c 94 e5 02 	jmp	0x5ca	; 0x5ca <__fp_round>
 646:	0e 94 d7 02 	call	0x5ae	; 0x5ae <__fp_pscA>
 64a:	38 f0       	brcs	.+14     	; 0x65a <__mulsf3+0x1c>
 64c:	0e 94 de 02 	call	0x5bc	; 0x5bc <__fp_pscB>
 650:	20 f0       	brcs	.+8      	; 0x65a <__mulsf3+0x1c>
 652:	95 23       	and	r25, r21
 654:	11 f0       	breq	.+4      	; 0x65a <__mulsf3+0x1c>
 656:	0c 94 ce 02 	jmp	0x59c	; 0x59c <__fp_inf>
 65a:	0c 94 d4 02 	jmp	0x5a8	; 0x5a8 <__fp_nan>
 65e:	11 24       	eor	r1, r1
 660:	0c 94 19 03 	jmp	0x632	; 0x632 <__fp_szero>

00000664 <__mulsf3x>:
 664:	0e 94 f6 02 	call	0x5ec	; 0x5ec <__fp_split3>
 668:	70 f3       	brcs	.-36     	; 0x646 <__mulsf3+0x8>

0000066a <__mulsf3_pse>:
 66a:	95 9f       	mul	r25, r21
 66c:	c1 f3       	breq	.-16     	; 0x65e <__mulsf3+0x20>
 66e:	95 0f       	add	r25, r21
 670:	50 e0       	ldi	r21, 0x00	; 0
 672:	55 1f       	adc	r21, r21
 674:	62 9f       	mul	r22, r18
 676:	f0 01       	movw	r30, r0
 678:	72 9f       	mul	r23, r18
 67a:	bb 27       	eor	r27, r27
 67c:	f0 0d       	add	r31, r0
 67e:	b1 1d       	adc	r27, r1
 680:	63 9f       	mul	r22, r19
 682:	aa 27       	eor	r26, r26
 684:	f0 0d       	add	r31, r0
 686:	b1 1d       	adc	r27, r1
 688:	aa 1f       	adc	r26, r26
 68a:	64 9f       	mul	r22, r20
 68c:	66 27       	eor	r22, r22
 68e:	b0 0d       	add	r27, r0
 690:	a1 1d       	adc	r26, r1
 692:	66 1f       	adc	r22, r22
 694:	82 9f       	mul	r24, r18
 696:	22 27       	eor	r18, r18
 698:	b0 0d       	add	r27, r0
 69a:	a1 1d       	adc	r26, r1
 69c:	62 1f       	adc	r22, r18
 69e:	73 9f       	mul	r23, r19
 6a0:	b0 0d       	add	r27, r0
 6a2:	a1 1d       	adc	r26, r1
 6a4:	62 1f       	adc	r22, r18
 6a6:	83 9f       	mul	r24, r19
 6a8:	a0 0d       	add	r26, r0
 6aa:	61 1d       	adc	r22, r1
 6ac:	22 1f       	adc	r18, r18
 6ae:	74 9f       	mul	r23, r20
 6b0:	33 27       	eor	r19, r19
 6b2:	a0 0d       	add	r26, r0
 6b4:	61 1d       	adc	r22, r1
 6b6:	23 1f       	adc	r18, r19
 6b8:	84 9f       	mul	r24, r20
 6ba:	60 0d       	add	r22, r0
 6bc:	21 1d       	adc	r18, r1
 6be:	82 2f       	mov	r24, r18
 6c0:	76 2f       	mov	r23, r22
 6c2:	6a 2f       	mov	r22, r26
 6c4:	11 24       	eor	r1, r1
 6c6:	9f 57       	subi	r25, 0x7F	; 127
 6c8:	50 40       	sbci	r21, 0x00	; 0
 6ca:	9a f0       	brmi	.+38     	; 0x6f2 <__mulsf3_pse+0x88>
 6cc:	f1 f0       	breq	.+60     	; 0x70a <__mulsf3_pse+0xa0>
 6ce:	88 23       	and	r24, r24
 6d0:	4a f0       	brmi	.+18     	; 0x6e4 <__mulsf3_pse+0x7a>
 6d2:	ee 0f       	add	r30, r30
 6d4:	ff 1f       	adc	r31, r31
 6d6:	bb 1f       	adc	r27, r27
 6d8:	66 1f       	adc	r22, r22
 6da:	77 1f       	adc	r23, r23
 6dc:	88 1f       	adc	r24, r24
 6de:	91 50       	subi	r25, 0x01	; 1
 6e0:	50 40       	sbci	r21, 0x00	; 0
 6e2:	a9 f7       	brne	.-22     	; 0x6ce <__mulsf3_pse+0x64>
 6e4:	9e 3f       	cpi	r25, 0xFE	; 254
 6e6:	51 05       	cpc	r21, r1
 6e8:	80 f0       	brcs	.+32     	; 0x70a <__mulsf3_pse+0xa0>
 6ea:	0c 94 ce 02 	jmp	0x59c	; 0x59c <__fp_inf>
 6ee:	0c 94 19 03 	jmp	0x632	; 0x632 <__fp_szero>
 6f2:	5f 3f       	cpi	r21, 0xFF	; 255
 6f4:	e4 f3       	brlt	.-8      	; 0x6ee <__mulsf3_pse+0x84>
 6f6:	98 3e       	cpi	r25, 0xE8	; 232
 6f8:	d4 f3       	brlt	.-12     	; 0x6ee <__mulsf3_pse+0x84>
 6fa:	86 95       	lsr	r24
 6fc:	77 95       	ror	r23
 6fe:	67 95       	ror	r22
 700:	b7 95       	ror	r27
 702:	f7 95       	ror	r31
 704:	e7 95       	ror	r30
 706:	9f 5f       	subi	r25, 0xFF	; 255
 708:	c1 f7       	brne	.-16     	; 0x6fa <__mulsf3_pse+0x90>
 70a:	fe 2b       	or	r31, r30
 70c:	88 0f       	add	r24, r24
 70e:	91 1d       	adc	r25, r1
 710:	96 95       	lsr	r25
 712:	87 95       	ror	r24
 714:	97 f9       	bld	r25, 7
 716:	08 95       	ret

00000718 <_exit>:
 718:	f8 94       	cli

0000071a <__stop_program>:
 71a:	ff cf       	rjmp	.-2      	; 0x71a <__stop_program>
